    -----------------------------------------------------------------------
          Psi4: An Open-Source Ab Initio Electronic Structure Package
                              Psi4 1.0.0 Driver

                          Git: Rev {master} 6a9a71b 

    J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,
    F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,
    M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,
    W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,
    and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012)
    (doi: 10.1002/wcms.93)

                         Additional Contributions by
    A. E. DePrince, U. Bozkaya, A. Yu. Sokolov, D. G. A. Smith, R. Di Remigio,
    R. M. Richard, J. F. Gonthier, H. R. McAlexander, M. Saitow, and
    B. P. Pritchard
    -----------------------------------------------------------------------


    Psi4 started on: Mon May  1 12:47:22 2017

    Process ID:  23333
    PSI4DATADIR: /Users/ryanbabbush/psi4conda/share/psi4
    Memory level set to 256.000 MB

  ==> Input File <==

--------------------------------------------------------------------------
"""This is a template for psi4 input format."""
import sys
import numpy

from fermilib.config import *
from fermilib.ops import MolecularData
from fermilib.ops._interaction_rdm import (InteractionRDM,
                                           unpack_spatial_rdm)
from fermilib.ops._interaction_tensor import (one_body_basis_change,
                                              two_body_basis_change)

sys.path.append('/Users/ryanbabbush/Desktop/fermilib/src/psi4tmp')
import parser_functions


# Set memory that job can use in megabytes.
memory 8000 mb

# Initialize molecular data.
_description = ''
if _description == 'None':
  _description = None
molecule = MolecularData([('Li', (0.0, 0.0, 0.0)), ('H', (0.0, 0.0, 1.45))],
                         'sto-3g',
                         1,
                         0,
                         _description)

# Set molecular geometry and symmetry.
molecule mol {
Li 0.0 0.0 0.0
H 0.0 0.0 1.45
symmetry c1
}
mol.set_multiplicity(1)
mol.set_molecular_charge(0)

# Set reference and guess.
if molecule.multiplicity == 1:
  set reference rhf
  set guess sad
else:
  set reference rohf
  set guess gwh

# Set global parameters of calculation.
set globals {
  basis sto-3g
  freeze_core false
  fail_on_maxiter true
  df_scf_guess true
  opdm true
  tpdm true
  soscf false
  scf_type direct
  maxiter 1e6
  num_amps_print 1e6
  r_convergence 1e-6
  d_convergence 1e-6
  e_convergence 1e-6
  ints_tolerance EQUALITY_TOLERANCE
  damping_percentage 0
}

# Run self-consistent field (SCF) calculation.
if True:
  try:
    hf_energy, hf_wavefunction = energy('scf', return_wfn=True)
    if False:
      print('Hartree-Fock energy for {} ({} electrons) is {}.'.format(
          molecule.name, molecule.n_electrons, hf_energy))
  except:
    if False:
      print('WARNING: SCF calculation failed.')
    else:
      raise
  else:
    # Get orbitals and Fock matrix.
    molecule.hf_energy = hf_energy
    molecule.nuclear_repulsion = mol.nuclear_repulsion_energy()
    molecule.canonical_orbitals = numpy.asarray(hf_wavefunction.Ca())
    molecule.n_orbitals = molecule.canonical_orbitals.shape[0]
    molecule.n_qubits = 2 * molecule.n_orbitals
    molecule.orbital_energies = numpy.asarray(hf_wavefunction.epsilon_a())
    molecule.fock_matrix = numpy.asarray(hf_wavefunction.Fa())

    # Get integrals using MintsHelper.
    mints = MintsHelper(hf_wavefunction.basisset())
    molecule.one_body_integrals = one_body_basis_change(
        numpy.asarray(mints.ao_kinetic()), molecule.canonical_orbitals)
    molecule.one_body_integrals += one_body_basis_change(
        numpy.asarray(mints.ao_potential()), molecule.canonical_orbitals)
    two_body_integrals = numpy.asarray(mints.ao_eri())
    two_body_integrals.reshape((molecule.n_orbitals,
                                molecule.n_orbitals,
                                molecule.n_orbitals,
                                molecule.n_orbitals))
    two_body_integrals = numpy.einsum('psqr', two_body_integrals)
    two_body_integrals = two_body_basis_change(
        two_body_integrals, molecule.canonical_orbitals)
    integrals_name = molecule.data_handle() + '_eri'
    numpy.save(integrals_name, two_body_integrals)
    molecule.save()


# Perform MP2 energy calculation if there are at least two electrons.
if False:
  try:
    assert molecule.n_electrons > 1
    mp2_energy = energy('mp2')
    if False:
      print('MP2 energy for {} ({} electrons) is {}.'.format(
          molecule.name, molecule.n_electrons, mp2_energy))
  except:
    if False:
      print('WARNING: MP2 calculation failed.')
    else:
      raise
  else:
    molecule.mp2_energy = mp2_energy
    molecule.save()


# Perform configuration interaction singles and doubles (CISD) calculation.
if False:
  set qc_module detci
  try:
    cisd_energy, cisd_wavefunction = energy('cisd', return_wfn=True)
    if False:
      print('CISD energy for {} ({} electrons) is {}.'.format(
          molecule.name, molecule.n_electrons, cisd_energy))
  except:
    if False:
      print('WARNING: CISD calculation failed.')
    else:
      raise
  else:
    # For the functions below, "a" and "b" refer to "up and "down" spins.
    molecule.cisd_energy = cisd_energy

    # Get 1-RDM from CISD calculation.
    cisd_one_rdm_a = numpy.array(cisd_wavefunction.get_opdm(
        0, 0, 'A', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)
    cisd_one_rdm_b = numpy.array(cisd_wavefunction.get_opdm(
        0, 0, 'B', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)

    # Get 2-RDM from CISD calculation.
    cisd_two_rdm_aa = numpy.array(cisd_wavefunction.get_tpdm(
        'AA', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                              molecule.n_orbitals, molecule.n_orbitals)
    cisd_two_rdm_ab = numpy.array(cisd_wavefunction.get_tpdm(
        'AB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                              molecule.n_orbitals, molecule.n_orbitals)
    cisd_two_rdm_bb = numpy.array(cisd_wavefunction.get_tpdm(
        'BB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                              molecule.n_orbitals, molecule.n_orbitals)

    # Get overall RDMs.
    cisd_one_rdm, cisd_two_rdm = unpack_spatial_rdm(
        cisd_one_rdm_a, cisd_one_rdm_b,
        cisd_two_rdm_aa, cisd_two_rdm_ab,
        cisd_two_rdm_bb)

    # Store 1-RDM in molecule file, 2-RDM separately in other file.
    molecule.cisd_one_rdm = cisd_one_rdm
    cisd_rdm_name = molecule.data_handle() + '_cisd_rdm'
    numpy.save(cisd_rdm_name, cisd_two_rdm)
    molecule.save()


# Perform exact diagonalization.
if True:
  set qc_module detci
  try:
    fci_energy, fci_wavefunction = energy('fci', return_wfn=True)
    if False:
      print('FCI energy for {} ({} electrons) is {}.'.format(
          molecule.name, molecule.n_electrons, fci_energy))
  except:
    if False:
      print('WARNING: FCI calculation failed.')
    else:
      raise
  else:
    # For the functions below, "a" and "b" refer to "up and "down" spins.
    molecule.fci_energy = fci_energy

    # Get 1-RDM from FCI calculation.
    fci_one_rdm_a = numpy.array(fci_wavefunction.get_opdm(
        0, 0, 'A', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)
    fci_one_rdm_b = numpy.array(fci_wavefunction.get_opdm(
        0, 0, 'B', True)).reshape(molecule.n_orbitals, molecule.n_orbitals)

    # Get 2-RDM from FCI calculation.
    fci_two_rdm_aa = numpy.array(fci_wavefunction.get_tpdm(
        'AA', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                              molecule.n_orbitals, molecule.n_orbitals)
    fci_two_rdm_ab = numpy.array(fci_wavefunction.get_tpdm(
        'AB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                              molecule.n_orbitals, molecule.n_orbitals)
    fci_two_rdm_bb = numpy.array(fci_wavefunction.get_tpdm(
        'BB', False)).reshape(molecule.n_orbitals, molecule.n_orbitals,
                              molecule.n_orbitals, molecule.n_orbitals)

    # Get overall RDMs.
    fci_one_rdm, fci_two_rdm = unpack_spatial_rdm(
        fci_one_rdm_a, fci_one_rdm_b,
        fci_two_rdm_aa, fci_two_rdm_ab, fci_two_rdm_bb)

    # Store 1-RDM in molecule file, 2-RDM separately in other file.
    molecule.fci_one_rdm = fci_one_rdm
    fci_rdm_name = molecule.data_handle() + '_fci_rdm'
    numpy.save(fci_rdm_name, fci_two_rdm)
    molecule.save()


# Perform coupled cluster singles and doubles (CCSD) calculation.
if False:
  set qc_module ccenergy
  try:
    ccsd_energy = energy('ccsd')
    if False:
      print('CCSD energy for {} ({} electrons) is {}.'.format(
          molecule.name, molecule.n_electrons, ccsd_energy))
  except:
    if False:
      print('WARNING: CCSD calculation failed.')
    else:
      raise
  else:
    molecule.ccsd_energy = ccsd_energy

    # Merge CC amplitudes into molecule by parsing
    psi_filename = outfile_name()
    ccsd_amplitudes = parser_functions.\
      parse_psi4_ccsd_amplitudes(2 * molecule.n_orbitals,
                                 molecule.get_n_alpha_electrons(),
                                 molecule.get_n_beta_electrons(),
                                 psi_filename)
    molecule.ccsd_amplitudes = ccsd_amplitudes
    molecule.save()
--------------------------------------------------------------------------
/Users/ryanbabbush/psi4conda/lib/python2.7/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.

  Memory set to   8.000 GiB by Python script.

*** tstart() called on Ryans-MacBook-Pro.local
*** at Mon May  1 12:47:23 2017


         ---------------------------------------------------------
                                   SCF
            by Justin Turney, Rob Parrish, and Andy Simmonett
                              RHF Reference
                        1 Threads,   8000 MiB Core
         ---------------------------------------------------------

  ==> Geometry <==

    Molecular point group: c1
    Full point group: C_inf_v

    Geometry (in Angstrom), charge = 0, multiplicity = 1:

       Center              X                  Y                   Z               Mass       
    ------------   -----------------  -----------------  -----------------  -----------------
          LI          0.000000000000     0.000000000000    -0.182125789427     7.016004548000
           H          0.000000000000     0.000000000000     1.267874210573     1.007825032070

  Running in c1 symmetry.

  Rotational constants: A = ************  B =      9.09845  C =      9.09845 [cm^-1]
  Rotational constants: A = ************  B = 272764.52384  C = 272764.52384 [MHz]
  Nuclear repulsion =    1.094849397082759

  Charge       = 0
  Multiplicity = 1
  Electrons    = 4
  Nalpha       = 2
  Nbeta        = 2

  ==> Algorithm <==

  SCF Algorithm Type is DIRECT.
  DIIS enabled.
  MOM disabled.
  Fractional occupation disabled.
  Guess Type is SAD.
  Energy threshold   = 1.00e-06
  Density threshold  = 1.00e-06
  Integral threshold = 0.00e+00

  ==> Primary Basis <==

  Basis Set: STO-3G
    Number of shells: 4
    Number of basis function: 6
    Number of Cartesian functions: 6
    Spherical Harmonics?: true
    Max angular momentum: 1

  ==> Pre-Iterations <==

   -------------------------------------------------------
    Irrep   Nso     Nmo     Nalpha   Nbeta   Ndocc  Nsocc
   -------------------------------------------------------
     A          6       6       0       0       0       0
   -------------------------------------------------------
    Total       6       6       2       2       2       0
   -------------------------------------------------------

  Starting with a DF guess...

  ==> Integral Setup <==

  ==> DFJK: Density-Fitted J/K Matrices <==

    J tasked:                  Yes
    K tasked:                  Yes
    wK tasked:                  No
    OpenMP threads:              1
    Integrals threads:           1
    Memory (MB):              5722
    Algorithm:                Core
    Integral Cache:           NONE
    Schwarz Cutoff:          1E-12
    Fitting Condition:       1E-12

   => Auxiliary Basis Set <=

  Basis Set: 
    Number of shells: 24
    Number of basis function: 70
    Number of Cartesian functions: 81
    Spherical Harmonics?: true
    Max angular momentum: 3

  Minimum eigenvalue in the overlap matrix is 3.0708526270E-01.
  Using Symmetric Orthogonalization.
  SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.

  ==> Iterations <==

                           Total Energy        Delta E     RMS |[F,P]|

   @DF-RHF iter   0:    -7.58160953612508   -7.58161e+00   3.09029e-02 
   @DF-RHF iter   1:    -7.85366533199913   -2.72056e-01   1.22121e-02 
   @DF-RHF iter   2:    -7.86144548184565   -7.78015e-03   2.86835e-03 DIIS/DAMP
   @DF-RHF iter   3:    -7.86240909678739   -9.63615e-04   1.03752e-03 DIIS/DAMP
   @DF-RHF iter   4:    -7.86261229999281   -2.03203e-04   4.32632e-05 DIIS/DAMP
   @DF-RHF iter   5:    -7.86261250658514   -2.06592e-07   3.96973e-06 DIIS/DAMP
   @DF-RHF iter   6:    -7.86261250782656   -1.24142e-09   7.71057e-08 DIIS/DAMP

  DF guess converged.

  ==> Integral Setup <==

  ==> DirectJK: Integral-Direct J/K Matrices <==

    J tasked:                  Yes
    K tasked:                  Yes
    wK tasked:                  No
    Integrals threads:           1
    Schwarz Cutoff:          1E-12

   @RHF iter   7:    -7.86256778556447    4.47223e-05   1.51241e-06 DIIS/DAMP
   @RHF iter   8:    -7.86256778568137   -1.16900e-10   4.71215e-07 DIIS/DAMP

  ==> Post-Iterations <==

    Orbital Energies (a.u.)
    -----------------------

    Doubly Occupied:                                                      

       1A     -2.346243     2A     -0.297481  

    Virtual:                                                              

       3A      0.079283     4A      0.163548     5A      0.163548  
       6A      0.586236  

    Final Occupation by Irrep:
              A 
    DOCC [     2 ]

  Energy converged.

  @RHF Final Energy:    -7.86256778568137

   => Energetics <=

    Nuclear Repulsion Energy =              1.0948493970827586
    One-Electron Energy =                 -12.6273851141982423
    Two-Electron Energy =                   3.6699679314341127
    DFT Exchange-Correlation Energy =       0.0000000000000000
    Empirical Dispersion Energy =           0.0000000000000000
    PCM Polarization Energy =               0.0000000000000000
    EFP Energy =                            0.0000000000000000
    Total Energy =                         -7.8625677856813700


  Saving occupied orbitals to File 180.

*** tstop() called on Ryans-MacBook-Pro.local at Mon May  1 12:47:23 2017
Module time:
	user time   =       0.29 seconds =       0.00 minutes
	system time =       0.01 seconds =       0.00 minutes
	total time  =          0 seconds =       0.00 minutes
Total time:
	user time   =       0.29 seconds =       0.00 minutes
	system time =       0.01 seconds =       0.00 minutes
	total time  =          0 seconds =       0.00 minutes


Properties will be evaluated at   0.000000,   0.000000,   0.000000 Bohr

Properties computed using the SCF density matrix

  Nuclear Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:     1.3634

  Electronic Dipole Moment: (a.u.)
     X:    -0.0000      Y:    -0.0000      Z:    -3.2632

  Dipole Moment: (a.u.)
     X:    -0.0000      Y:    -0.0000      Z:    -1.8998     Total:     1.8998

  Dipole Moment: (Debye)
     X:    -0.0000      Y:    -0.0000      Z:    -4.8287     Total:     4.8287


*** tstart() called on Ryans-MacBook-Pro.local
*** at Mon May  1 12:47:23 2017


         ---------------------------------------------------------
                                   SCF
            by Justin Turney, Rob Parrish, and Andy Simmonett
                              RHF Reference
                        1 Threads,   8000 MiB Core
         ---------------------------------------------------------

  ==> Geometry <==

    Molecular point group: c1
    Full point group: C_inf_v

    Geometry (in Angstrom), charge = 0, multiplicity = 1:

       Center              X                  Y                   Z               Mass       
    ------------   -----------------  -----------------  -----------------  -----------------
          LI          0.000000000000     0.000000000000    -0.182125789427     7.016004548000
           H          0.000000000000     0.000000000000     1.267874210573     1.007825032070

  Running in c1 symmetry.

  Rotational constants: A = ************  B =      9.09845  C =      9.09845 [cm^-1]
  Rotational constants: A = ************  B = 272764.52384  C = 272764.52384 [MHz]
  Nuclear repulsion =    1.094849397082759

  Charge       = 0
  Multiplicity = 1
  Electrons    = 4
  Nalpha       = 2
  Nbeta        = 2

  ==> Algorithm <==

  SCF Algorithm Type is DIRECT.
  DIIS enabled.
  MOM disabled.
  Fractional occupation disabled.
  Guess Type is SAD.
  Energy threshold   = 1.00e-06
  Density threshold  = 1.00e-06
  Integral threshold = 0.00e+00

  ==> Primary Basis <==

  Basis Set: STO-3G
    Number of shells: 4
    Number of basis function: 6
    Number of Cartesian functions: 6
    Spherical Harmonics?: true
    Max angular momentum: 1

  ==> Pre-Iterations <==

   -------------------------------------------------------
    Irrep   Nso     Nmo     Nalpha   Nbeta   Ndocc  Nsocc
   -------------------------------------------------------
     A          6       6       0       0       0       0
   -------------------------------------------------------
    Total       6       6       2       2       2       0
   -------------------------------------------------------

  Starting with a DF guess...

  ==> Integral Setup <==

  ==> DFJK: Density-Fitted J/K Matrices <==

    J tasked:                  Yes
    K tasked:                  Yes
    wK tasked:                  No
    OpenMP threads:              1
    Integrals threads:           1
    Memory (MB):              5722
    Algorithm:                Core
    Integral Cache:           NONE
    Schwarz Cutoff:          1E-12
    Fitting Condition:       1E-12

   => Auxiliary Basis Set <=

  Basis Set: 
    Number of shells: 24
    Number of basis function: 70
    Number of Cartesian functions: 81
    Spherical Harmonics?: true
    Max angular momentum: 3

  Minimum eigenvalue in the overlap matrix is 3.0708526270E-01.
  Using Symmetric Orthogonalization.
  SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.

  ==> Iterations <==

                           Total Energy        Delta E     RMS |[F,P]|

   @DF-RHF iter   0:    -7.58160953612508   -7.58161e+00   3.09029e-02 
   @DF-RHF iter   1:    -7.85366533199913   -2.72056e-01   1.22121e-02 
   @DF-RHF iter   2:    -7.86144548184565   -7.78015e-03   2.86835e-03 DIIS/DAMP
   @DF-RHF iter   3:    -7.86240909678739   -9.63615e-04   1.03752e-03 DIIS/DAMP
   @DF-RHF iter   4:    -7.86261229999281   -2.03203e-04   4.32632e-05 DIIS/DAMP
   @DF-RHF iter   5:    -7.86261250658514   -2.06592e-07   3.96973e-06 DIIS/DAMP
   @DF-RHF iter   6:    -7.86261250782656   -1.24142e-09   7.71057e-08 DIIS/DAMP

  DF guess converged.

  ==> Integral Setup <==

  ==> DirectJK: Integral-Direct J/K Matrices <==

    J tasked:                  Yes
    K tasked:                  Yes
    wK tasked:                  No
    Integrals threads:           1
    Schwarz Cutoff:          1E-12

   @RHF iter   7:    -7.86256778556447    4.47223e-05   1.51241e-06 DIIS/DAMP
   @RHF iter   8:    -7.86256778568137   -1.16902e-10   4.71215e-07 DIIS/DAMP

  ==> Post-Iterations <==

    Orbital Energies (a.u.)
    -----------------------

    Doubly Occupied:                                                      

       1A     -2.346243     2A     -0.297481  

    Virtual:                                                              

       3A      0.079283     4A      0.163548     5A      0.163548  
       6A      0.586236  

    Final Occupation by Irrep:
              A 
    DOCC [     2 ]

  Energy converged.

  @RHF Final Energy:    -7.86256778568137

   => Energetics <=

    Nuclear Repulsion Energy =              1.0948493970827586
    One-Electron Energy =                 -12.6273851141982476
    Two-Electron Energy =                   3.6699679314341154
    DFT Exchange-Correlation Energy =       0.0000000000000000
    Empirical Dispersion Energy =           0.0000000000000000
    PCM Polarization Energy =               0.0000000000000000
    EFP Energy =                            0.0000000000000000
    Total Energy =                         -7.8625677856813745


  Saving occupied orbitals to File 180.

*** tstop() called on Ryans-MacBook-Pro.local at Mon May  1 12:47:23 2017
Module time:
	user time   =       0.29 seconds =       0.00 minutes
	system time =       0.01 seconds =       0.00 minutes
	total time  =          0 seconds =       0.00 minutes
Total time:
	user time   =       0.68 seconds =       0.01 minutes
	system time =       0.02 seconds =       0.00 minutes
	total time  =          0 seconds =       0.00 minutes


Properties will be evaluated at   0.000000,   0.000000,   0.000000 Bohr

Properties computed using the SCF density matrix

  Nuclear Dipole Moment: (a.u.)
     X:     0.0000      Y:     0.0000      Z:     1.3634

  Electronic Dipole Moment: (a.u.)
     X:    -0.0000      Y:    -0.0000      Z:    -3.2632

  Dipole Moment: (a.u.)
     X:    -0.0000      Y:    -0.0000      Z:    -1.8998     Total:     1.8998

  Dipole Moment: (Debye)
     X:    -0.0000      Y:    -0.0000      Z:    -4.8287     Total:     4.8287

 MINTS: Wrapper to libmints.
   by Justin Turney

   Calculation information:
      Number of atoms:                   2
      Number of AO shells:               4
      Number of SO shells:               4
      Number of primitives:             12
      Number of atomic orbitals:         6
      Number of basis functions:         6

      Number of irreps:                  1
      Integral cutoff                 0.00e+00
      Number of functions per irrep: [   6 ]

 OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals
         stored in file 35.

      Computing two-electron integrals...done
      Computed 83 non-zero two-electron integrals.
        Stored in file 33.


         ---------------------------------------------------------
                                 D E T C I  

                             C. David Sherrill
                             Matt L. Leininger
                               18 June 1999
         ---------------------------------------------------------


DETCI PARAMETERS: 
   EX LEVEL      =        4      H0 BLOCKSIZE =     1000
   VAL EX LEVEL  =        0      H0 GUESS SIZE=     1000
   H0COUPLINGSIZE=        0      H0 COUPLING  =       no
   MAXITER       =       24      NUM PRINT    =       20
   NUM ROOTS     =        1      ICORE        =        1
   PRINT         =        1      FCI          =      yes
   R CONV        = 1.00e-06      MIXED        =      yes
   E CONV        = 1.00e-06      MIXED4       =      yes
   R4S           =       no      REPL OTF     =       no
   DIAG METHOD   =      SEM
   PRECONDITIONER= DAVIDSON      UPDATE       = DAVIDSON
   S             =   0.0000      Ms0          =      yes
   MAX NUM VECS  =       25
   RESTART       =       no
   GUESS VECTOR  =  H0BLOCK      OPENTYPE     =     NONE
   REF SYM       =     auto
   COLLAPSE SIZE =        1      HD AVG       = EVANGELISTI
   LSE           =       no      LSE ITER     =        0
   HD OTF        =      yes      NO DFILE     =       no
   MPN           =       no      MPN SCHMIDT  =       no
   ZAPTN         =       no      MPN WIGNER   =       no
   PERT Z        =   1.0000      FOLLOW ROOT  =        0
   NUM THREADS   =        1
   FILTER GUESS  =       no      SF RESTRICT  =       no
   OPDM          =      yes      TRANS DENSITY=       no

   FILES         =  50 51 52 53

   EX ALLOW      =  1  1  1  1 
   STATE AVERAGE =  1(1.00) 

ORBITALS:
   NMO          =        6
   FROZEN CORE  =        0      RESTR CORE   =        0
   FROZEN VIRT  =        0      RESTR VIRT   =        0
   DROPPED CORE =        0      DROPPED VIRT =        0
   EXPLICIT CORE=        0      ORBS IN CI   =        6
   NUM ALP      =        2      NUM BET      =        2
   NUM ALP EXPL =        2      NUM BET EXPL =        2
   IOPEN        =       no

   DOCC            =   2 
   SOCC            =   0 

   FROZEN DOCC     =   0 
   RESTRICTED DOCC =   0 
   ACTIVE          =   6 
   RESTRICTED UOCC =   0 
   FROZEN UOCC     =   0 
         ---------------------------------------------------------


   ==> Setting up CI strings <==

   There are 15 alpha and 15 beta strings
   The CI space requires 225 (2.25E+02) determinants and 1 blocks


   ==> Transforming CI integrals <==
	Presorting SO-basis two-electron integrals.
	Sorting File: SO Ints (nn|nn) nbuckets = 1
	Transforming the one-electron integrals and constructing Fock matrices
	Starting first half-transformation.
	Sorting half-transformed integrals.
	First half integral transformation complete.
	Starting second half-transformation.
	Two-electron integral transformation complete.

*** H0 Block Eigenvalue =  -7.88098231

Find the roots by the Simultaneous Expansion Method (Block Davidson Method)
Using 1 initial trial vectors
Iter  0  Root  1 =  -7.880982315   Delta_E -8.976E+00   Delta_C  1.924E-14  
Warning: Norm of correction (root 0) is < 1.0E-13
Iter  1  Root  1 =  -7.880982315   Delta_E  0.000E+00   Delta_C  9.916E-14 c

* ROOT 1 CI total energy =  -7.8809823148257


The 20 most important determinants

    1   -0.989236  (    0,    0)  1AX  2AX  
    2    0.104244  (   10,   10)  1AX  6AX  
    3    0.052557  (    1,   10)  1AX  3AA  6AB  
    4    0.052557  (   10,    1)  1AX  3AB  6AA  
    5   -0.034705  (    0,    1)  1AX  2AA  3AB  
    6   -0.034705  (    1,    0)  1AX  2AB  3AA  
    7    0.029263  (    1,    1)  1AX  3AX  
    8    0.028923  (    6,    6)  1AX  5AX  
    9    0.028923  (    3,    3)  1AX  4AX  
   10    0.003747  (    2,    2)  2AX  3AX  
   11    0.003098  (    3,    4)  1AA  2AB  4AX  
   12    0.003098  (    4,    3)  1AB  2AA  4AX  
   13    0.003098  (    6,    7)  1AA  2AB  5AX  
   14    0.003098  (    7,    6)  1AB  2AA  5AX  
   15    0.002689  (    0,   10)  1AX  2AA  6AB  
   16    0.002689  (   10,    0)  1AX  2AB  6AA  
   17    0.001794  (    4,    4)  2AX  4AX  
   18    0.001794  (    7,    7)  2AX  5AX  
   19   -0.001064  (    0,   12)  1AA  2AA  3AB  6AB  
   20   -0.001064  (   12,    0)  1AB  2AB  3AA  6AA  


		 "A good bug is a dead bug" 

			 - Starship Troopers

		 "I didn't write FORTRAN.  That's the problem."

			 - Edward Valeev


*** Psi4 exiting successfully. Buy a developer a beer!
